FAQ

Q1. render vs redirect_to?
Ans: If you're using render, when the user refreshes the page, it will submit the previous POST request again. This may cause undesired results like duplicate purchase and others.
But if you're using redirect_to, when the user refreshes the page, it will just request that same page again. 
So the place where redirect_to should be used is when you're doing a HTTP POST request and you don't want the user to resubmit the request when it's done (which may cause duplicate items and other problems).

Q2. Datatypes in Rails?
Ans: Link: https://dev.to/asyraf/rails-activerecord-data-types-32ip

The ActiveRecord data types available in Rails 6;
:primary_key
:string: short text
:text: long text
:integer: whole numbers [-4, 0, 9, 772]
:float: double-precision floating-point numbers [3244.90]
:decimal: high-precision floating-point numbers [3244.2342343789212]
:datetime
:time
:date
:binary: 1 / 0
:boolean: true or false

Q3. Types of form fieds?
Ans: Types of form fields in Rails (html.erb) :

<%= form.text_area :message, size: "70x5" %>
<%= form.hidden_field :parent_id, value: "foo" %>
<%= form.password_field :password %>
<%= form.number_field :price, in: 1.0..20.0, step: 0.5 %>
<%= form.range_field :discount, in: 1..100 %>
<%= form.date_field :born_on %>
<%= form.time_field :started_at %>
<%= form.datetime_local_field :graduation_day %>
<%= form.month_field :birthday_month %>
<%= form.week_field :birthday_week %>
<%= form.search_field :name %>
<%= form.email_field :address %>
<%= form.telephone_field :phone %>
<%= form.url_field :homepage %>
<%= form.color_field :favorite_color %>

------Migration------

Q1. Creating Migration?
Ans: Migration files are automatically generated when we generate a new model. And the column_name:datatype provide while creating model (i.e. title:string, body:text) are included as columns in migration file (i.e. t.string :title, t.text :body).

Q2. Manipulating Database?
Ans: Command "$ rails db:migrate" is used to manipulate the database. It can be seen in db/schema.rb after running db:migrate.

Q3. Adding new column to already generated Table/Model and creating new Migration?
Ans: For perfoming such changes we will create new Migrations for the particular Table/Model. Like, 
"$ rails generate migration AddStatusToArticles status:string"
"$ rails generate migration AddStatusToComments status:string"
The class name (i.e. AddStatusToComments) should be relevant to the task. 
Now to add new column we use predefined method "add_column" inside def change.
(create_table, change_column, add_index, remove_column are some other Migration methods.)
More migration methods: https://edgeapi.rubyonrails.org/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html

------Association------

Q1. Types of Associations in Rails?
Ans: Rails supports six types of associations:

belongs_to
has_one
has_many
has_many :through
has_one :through
has_and_belongs_to_many

------Active Record------

Q1.

------Routes------

Q1. resource vs resources?
Ans: 1. As we can see resources generated one extra route for index action. index action is intended to display list of resource.
2. Singular routes donâ€™t have ID of resource being worked on.
3. Both singular and plural resource routes route request to pluralized controller.

Because you might want to use the same controller for a singular route (/account) and a plural route (/accounts/45), singular resources map to plural controllers. So that, for example, resource :photo and resources :photos creates both singular and plural routes that map to the same controller (PhotosController).

Q2. How to use 'namespace'? 
Ans: To organize groups of controllers under a folder we use namespace.
1. Group controllers under a folder (ex: admin)
2. Put resources/routes in namespace block in routes.rb (ex: namespace :admin do ... end) 
3. Put controller action in module. (ex: module Admin ... end)
4. Also group the respective Views under the same folder name (ex: admin)
5. Also change in root in routes.rb
6. Change the Url/Path helper methods in all views (ex: article_path)

namespace changes the URI Pattern, Prefix, Path Helper methods and Controller#Actions and prefixes it with the folder name (here, admin).